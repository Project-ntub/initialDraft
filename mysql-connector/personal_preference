import mysql.connector
from mysql.connector import Error

def get_db_connection():
    try:
        connection = mysql.connector.connect(
            host='140.131.114.242',
            database='113-ntub113209',
            user='ntub113209',
            password='Sw@23110565'
        )
        if connection.is_connected():
            print("Connected to the database")
        return connection
    except Error as e:
        print(f"Error while connecting to MySQL: {e}")
        return None

# 測試連接
if __name__ == "__main__":
    connection = get_db_connection()
    if connection:
        connection.close()

import mysql.connector
from mysql.connector import Error

def get_db_connection():
    try:
        connection = mysql.connector.connect(
            host='140.131.114.242',
            database='113-ntub113209',
            user='ntub113209',
            password='Sw@23110565'
        )
        return connection
    except Error as e:
        print(f"Error while connecting to MySQL: {e}")
        return None

def get_preferences(user_id):
    connection = get_db_connection()
    if connection:
        cursor = connection.cursor(dictionary=True)
        cursor.execute("SELECT * FROM userpreferences WHERE user_id = %s", (user_id,))
        preference = cursor.fetchone()
        connection.close()
        return preference if preference else {"fontsize": "medium", "notificationSettings": False, "autoLogin": False}
    else:
        return {"error": "Database connection failed"}

# 測試查詢
if __name__ == "__main__":
    user_id = 1
    preferences = get_preferences(user_id)
    print(preferences)

import mysql.connector
from mysql.connector import Error

def get_db_connection():
    try:
        connection = mysql.connector.connect(
            host='140.131.114.242',
            database='113-ntub113209',
            user='ntub113209',
            password='Sw@23110565'
        )
        return connection
    except Error as e:
        print(f"Error while connecting to MySQL: {e}")
        return None

def update_preference(user_id, fontsize, notificationSettings, autoLogin):
    connection = get_db_connection()
    if connection:
        cursor = connection.cursor()
        sql = """
            UPDATE userpreferences SET
                fontsize = %s,
                notificationSettings = %s,
                autoLogin = %s
            WHERE user_id = %s
        """
        cursor.execute(sql, (fontsize, notificationSettings, autoLogin, user_id))
        connection.commit()
        connection.close()
        return {"message": "Preferences updated successfully"}
    else:
        return {"error": "Database connection failed"}

import mysql.connector
from mysql.connector import Error

def get_db_connection():
    try:
        connection = mysql.connector.connect(
            host='140.131.114.242',
            database='113-ntub113209',
            user='ntub113209',
            password='Sw@23110565'
        )
        return connection
    except Error as e:
        print(f"Error while connecting to MySQL: {e}")
        return None

def update_preference(user_id, fontsize, notificationSettings, autoLogin):
    connection = get_db_connection()
    if connection:
        cursor = connection.cursor()
        sql = """
            UPDATE userpreferences SET
                fontsize = %s,
                notificationSettings = %s,
                autoLogin = %s
            WHERE user_id = %s
        """
        try:
            cursor.execute(sql, (fontsize, int(notificationSettings), int(autoLogin), user_id))
            connection.commit()
            print(f"{cursor.rowcount} record(s) updated.")
        except Error as e:
            print(f"Error while updating MySQL: {e}")
        finally:
            connection.close()
            return {"message": "Preferences updated successfully"}
    else:
        return {"error": "Database connection failed"}

# 測試更新
if __name__ == "__main__":
    result = update_preference(1, 'large', True, True)
    print(result)


import mysql.connector
from mysql.connector import Error

def get_db_connection():
    try:
        connection = mysql.connector.connect(
            host='140.131.114.242',
            database='113-ntub113209',
            user='ntub113209',
            password='Sw@23110565'
        )
        return connection
    except Error as e:
        print(f"Error while connecting to MySQL: {e}")
        return None

def add_preference(user_id, fontsize, notificationSettings, autoLogin):
    connection = get_db_connection()
    if connection:
        cursor = connection.cursor()
        sql = """
            INSERT INTO userpreferences (user_id, fontsize, notificationSettings, autoLogin)
            VALUES (%s, %s, %s, %s)
        """
        try:
            cursor.execute(sql, (user_id, fontsize, int(notificationSettings), int(autoLogin)))
            connection.commit()
            print(f"{cursor.rowcount} record(s) inserted.")
        except Error as e:
            print(f"Error while inserting into MySQL: {e}")
        finally:
            connection.close()
            return {"message": "Preference added successfully"}
    else:
        return {"error": "Database connection failed"}

# 測試新增
if __name__ == "__main__":
    result = add_preference(1, 'small', False, True)
    print(result)


import mysql.connector
from mysql.connector import Error

def get_db_connection():
    try:
        connection = mysql.connector.connect(
            host='140.131.114.242',
            database='113-ntub113209',
            user='ntub113209',
            password='Sw@23110565'
        )
        return connection
    except Error as e:
        print(f"Error while connecting to MySQL: {e}")
        return None

def delete_preference(user_id):
    connection = get_db_connection()
    if connection:
        cursor = connection.cursor()
        sql = "DELETE FROM userpreferences WHERE user_id = %s"
        try:
            cursor.execute(sql, (user_id,))
            connection.commit()
            print(f"{cursor.rowcount} record(s) deleted.")
            return {"message": "Preference deleted successfully"}
        except Error as e:
            print(f"Error while deleting from MySQL: {e}")
            return {"error": f"Error while deleting from MySQL: {e}"}
        finally:
            connection.close()
    else:
        return {"error": "Database connection failed"}

# 測試刪除
if __name__ == "__main__":
    user_id = 1  # 替換為要刪除的使用者ID
    result = delete_preference(user_id)
    print(result)


